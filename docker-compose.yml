version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: automation-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Test@Password123
      - MSSQL_PID=Developer
    ports:
      - "1444:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - automation-network

  # PostgreSQL (Alternative Database)
  postgres:
    image: postgres:15-alpine
    container_name: automation-postgres
    environment:
      - POSTGRES_DB=AutomationSystem
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - automation-network
    profiles:
      - postgres

  # Backend API
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: automation-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__SqlServer=Server=sqlserver;Database=AutomationSystem;User=sa;Password=Test@Password123;TrustServerCertificate=True
      - Database__Provider=SqlServer
    ports:
      - "5555:80"
    depends_on:
      - sqlserver
    volumes:
      - ./Backend/uploads:/app/uploads
      - ./Backend/logs:/app/logs
    networks:
      - automation-network

  # Frontend Angular
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: automation-frontend
    ports:
      - "4300:80"
    depends_on:
      - backend
    networks:
      - automation-network

networks:
  automation-network:
    driver: bridge

volumes:
  sqlserver_data:
  postgres_data:

